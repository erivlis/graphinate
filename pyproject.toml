[project]
name = "Graphinate"
version = "0.1.0"
authors = [
    { name = "Eran Rivlis", email = "eran@rivlis.info" },
]
description = "Graphinate. Data to Graphs."
readme = "README.md"
requires-python = ">=3.9"
classifiers = [
    "Development Status :: 2 - Pre-Alpha",
    "Intended Audience :: Developers",
    "Intended Audience :: Information Technology",
    "Intended Audience :: Science/Research",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3 :: Only",
    "Programming Language :: Python :: Implementation :: CPython",
    "License :: OSI Approved :: GNU Lesser General Public License v3 or later (LGPLv3+)",
    "Natural Language :: English",
    "Operating System :: OS Independent",
    "Topic :: Scientific/Engineering",
    "Topic :: Software Development :: Libraries",
    "Typing :: Typed"
]
keywords = ['graph', 'declarative']
dependencies = [
    "click>=8",
    "inflect>=7",
    "loguru>=0.7",
    "matplotlib>=3.7",
    "networkx>=3",
    "strawberry-graphql[asgi,opentelemetry]"
]


[project.urls]
"Homepage" = "https://erivlis.github.io/graphinate"
"Documentation" = "https://erivlis.github.io/graphinate"
"Bug Tracker" = "https://github.com/erivlis/graphinate/issues"
"Source" = "https://github.com/erivlis/graphinate"


[project.optional-dependencies]
dev = [
    "ruff",
    # "pip-tools",
    # "pipdeptree"

]
docs = [
    "mkdocs-material",
    "mkdocstrings-python",
    "mkdocs-gen-files",
    "mkdocs-literate-nav",
    "mkdocs-section-index"
]
test = [
    "pytest >= 7.3.2",
    "pytest-cov >= 4.1.0",
    "pytest-randomly >= 3.15.0"
    # "pytest-asyncio"
    # "pytest-rerunfailures",
    # "pytest-xdist",
]
plot = [
    "scipy"
]
server = [
    "starlette-prometheus",
    "uvicorn[standard]"
]


[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"


[tool.hatch.metadata]
allow-direct-references = true


[tool.pytest.ini_options]
pythonpath = ["src"]
testpaths = ["tests"]


[tool.black]
line-length = 120
#extend-exclude = ''


[tool.ruff]
select = [
    "E",
    "F",
    "W",
    "C90",
    "I",
    "N",
    "U",
    "C4",
    "PIE",
    "PT",
    "SIM",
    # "ERA",
    "TRY",
    "RUF",
]
ignore = ["F401"]
# Exclude a variety of commonly ignored directories.
exclude = [
    ".bzr",
    ".direnv",
    ".eggs",
    ".git",
    ".git-rewrite",
    ".hg",
    ".idea",
    ".mypy_cache",
    ".nox",
    ".pants.d",
    ".pytype",
    ".ruff_cache",
    ".svn",
    ".tox",
    ".venv",
    "__pypackages__",
    "_build",
    "buck-out",
    "build",
    "dist",
    "venv",
]

# Allow unused variables when underscore-prefixed.
dummy-variable-rgx = "^(_+|(_+[a-zA-Z0-9_]*[a-zA-Z0-9]+?))$"

line-length = 120


[tool.ruff.flake8-quotes]
docstring-quotes = "double"
inline-quotes = "single"
multiline-quotes = "single"


[tool.ruff.mccabe]
# Unlike Flake8, default to a complexity level of 10.
max-complexity = 15
